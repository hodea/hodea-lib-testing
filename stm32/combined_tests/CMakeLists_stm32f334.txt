# Copyright (c) 2017, Franz Hollerer. All rights reserved.
# This code is licensed under the MIT License (MIT).
# See LICENSE file for full details.

# -------------------------------------------- minimum cmake version ---

# We tested the build with cmake 3.5, but it probably also works with
# older versions.
cmake_minimum_required(VERSION 3.5)

# ------------------------------------------ build process debugging ---

set(CMAKE_VERBOSE_MAKEFILE false)

# ---------------------------------------- project specific settings ---

set(TARGET_NAME "stm32f334_combined_tests")

set(CMAKE_SOURCE_DIR "${PROJECT_ROOT_DIR}/src")
set(HODEA_ROOT_DIR "${PROJECT_ROOT_DIR}/../../hodea-lib")
set(CMSIS_ROOT_DIR "${PROJECT_ROOT_DIR}/../../hodea-stm32f3-vpkg/CMSIS")

add_executable(${TARGET_NAME}
    "${CMAKE_SOURCE_DIR}/main.cpp"
    "${CMAKE_SOURCE_DIR}/stm32f334/system_stm32f3xx.c"
    "${CMAKE_SOURCE_DIR}/stm32f334/gcc/startup_stm32f334x8.s"
    )

target_include_directories(${TARGET_NAME} PRIVATE
    "${CMAKE_SOURCE_DIR}/stm32f334"
    "${HODEA_ROOT_DIR}"
    "${CMSIS_ROOT_DIR}/Include"
    "${CMSIS_ROOT_DIR}/Device/ST/STM32F3xx/Include"
    )

add_definitions(-DSTM32F334x8)

# ------------------------------------------------ compiler settings ---

set(CMAKE_SYSTEM_NAME Generic)
set(TARGET_TRIPLET "arm-none-eabi")
set(CMAKE_ASM_COMPILER "${TARGET_TRIPLET}-gcc")
set(CMAKE_C_COMPILER "${TARGET_TRIPLET}-gcc")
set(CMAKE_CXX_COMPILER "${TARGET_TRIPLET}-g++")
set(CMAKE_OBJCOPY "${TARGET_TRIPLET}-objcopy")

enable_language(ASM)

set(CMAKE_EXECUTABLE_SUFFIX ".elf")

set(CMAKE_C_FLAGS_DEBUG "-O0")
set(CMAKE_C_FLAGS_RELEASE "-O3")
set(CMAKE_CXX_FLAGS_DEBUG "-O0")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")

set(CMAKE_C_FLAGS "\
    -g -Wall \
    -ffreestanding -ffunction-sections -fdata-sections -fno-common \
    -mcpu=cortex-m4 -mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16 -std=c11"
    )
set(CMAKE_CXX_FLAGS "\
    -g -Wall \
    -ffreestanding -ffunction-sections -fdata-sections -fno-common \
    -mcpu=cortex-m4 -mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16 -std=c++11"
    )
set(CMAKE_EXE_LINKER_FLAGS "\
    --specs=nano.specs -Xlinker --gc-sections \
    -T${CMAKE_SOURCE_DIR}/stm32f334/gcc/STM32F334R8Tx_FLASH.ld \
    -Xlinker -Map=${TARGET_NAME}.map"
    )

# ----------------------------------------------- .bin and .hex file ---

add_custom_command(TARGET ${TARGET_NAME} POST_BUILD COMMAND
     ${CMAKE_OBJCOPY} -Obinary ${TARGET_NAME}.elf ${TARGET_NAME}.bin
     )
add_custom_command(TARGET ${TARGET_NAME} POST_BUILD COMMAND
     ${CMAKE_OBJCOPY} -Oihex ${TARGET_NAME}.elf ${TARGET_NAME}.hex
     )
