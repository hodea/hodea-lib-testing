#!/bin/sh
# This script to flash binary image using Segger JLINK.

PROGRAM_NAME=`basename $0`

device="stm32f091rc"
firmware_image=""

# -------------------------------------------------------------------------

# Print usage message.
usage()
{
    echo "Firmware flash download to STM32 MCUs"
    echo "usage: $PROGRAM_NAME [options] file"
    echo "Options:"
    echo "  -h, --help\t\tDisplay this usage message"
    echo "  -d, --device <core>\tdevice to use for the firmware download"
    echo "\t\t\tExample: stm32f091rc (default), stm32f334r8"
}

# -------------------------------------------------------------------------

# Parse options and arguments passed via command line.
parse_cmd_line()
{
    local cmd_line="$*"

    # Transform long options to short ones.
    for arg in "$@"; do
        shift
        case "$arg" in
            "--help")   set -- "$@" "-h" ;;
            "--device") set -- "$@" "-d" ;;
            *)          set -- "$@" "$arg"
        esac
    done

    # Process options.
    while getopts "d:h" opt; do
        case $opt in
            d) case $OPTARG in
                    stm32f*)
                        device=$OPTARG
                        ;;
                    *)
                        echo "unknown device"
                        usage $cmd_line; exit 1
                        ;;
                esac
                ;;
            h)
                usage $cmd_line
                exit 0
                ;;
            \?)
                usage $cmd_line
                exit 1
                ;;
        esac
    done

    shift $((OPTIND - 1))

    if [ "$#" -ne "1" ]; then
        echo "firmware_image missing"
        usage $cmd_line
        exit 1
    fi

    if [ ! -f $1 ]; then
        echo "error: file $1 not found"
        usage $cmd_line
        exit 1
    fi

    firmware_image=$1
}

# -------------------------------------------------------------------------

parse_cmd_line $*

JLinkExe -device $device -if JTAG -speed 4000 -autoconnect -1 -jtagconf -1,-1  <<_InputFromHere_
loadbin $firmware_image 0x8000000
r
exit
_InputFromHere_
